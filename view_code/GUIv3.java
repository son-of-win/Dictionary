package view_code;

import dict_database.Speak;
import dict_database.database;
import source_code.DictionaryCommandLine;
import GUI.*;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.border.Border;
public class GUIv3 extends javax.swing.JFrame{

    /**
     * Creates new form GUIv3
     */
    public database data = new database();
    DefaultListModel<String> list = new DefaultListModel <String> ();
    public GUIv3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        background = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        taskbar = new javax.swing.JPanel();
        addWord = new javax.swing.JButton();
        deleteWord = new javax.swing.JButton();
        editWord = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        history = new javax.swing.JComboBox<>();
        inputText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        suggestWord = new javax.swing.JList<>();
        speak = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        showLookup = new javax.swing.JEditorPane();
        jLabel2 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(204, 255, 204));

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/dictionary.png"))); // NOI18N
        jLabel1.setText("Dictionary by HuuVuot");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
        );

        taskbar.setBackground(new java.awt.Color(102, 204, 255));

        addWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconfinder_38_icons_2191562.png"))); // NOI18N
        addWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordActionPerformed(evt);
            }
        });

        deleteWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        deleteWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWordActionPerformed(evt);
            }
        });

        editWord.setIcon(new javax.swing.ImageIcon("F:\\Dictionary_ver2\\src\\icon\\edit.png")); // NOI18N
        editWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editWordActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon("F:\\Dictionary_ver2\\src\\icon\\iconfinder_Artboard_29_3952944.png")); // NOI18N

        history.setBackground(new java.awt.Color(102, 204, 255));
        history.setForeground(new java.awt.Color(51, 51, 51));
        history.getEditor().getEditorComponent().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historyMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout taskbarLayout = new javax.swing.GroupLayout(taskbar);
        taskbar.setLayout(taskbarLayout);
        taskbarLayout.setHorizontalGroup(
                taskbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taskbarLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(history, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(addWord, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteWord, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(editWord, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        taskbarLayout.setVerticalGroup(
                taskbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(addWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editWord, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(history)
        );

        inputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextActionPerformed(evt);
            }
        });
        inputText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputTextKeyReleased(evt);
            }
        });

        suggestWord.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        suggestWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suggestWordMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(suggestWord);

        speak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/play.png"))); // NOI18N
        speak.setOpaque(false);
        speak.setFocusPainted(false);
        speak.setBorderPainted(false);
        speak.setContentAreaFilled(false);
        speak.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
        speak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speakActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(showLookup);

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        jLabel2.setText("Look up : ");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
                backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(taskbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(backgroundLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(backgroundLayout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(inputText, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(speak, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
                backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(backgroundLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(taskbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(backgroundLayout.createSequentialGroup()
                                                .addComponent(speak, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(backgroundLayout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(inputText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        pack();
        setLocationRelativeTo(null);
        setResizable(false);
    }// </editor-fold>

    private void speakActionPerformed(ActionEvent evt) {
        int index = suggestWord.getSelectedIndex();
        String text = list.elementAt(index);
        Speak voice = new Speak();
        voice.SpeakWord(text);
    }

    private void inputTextActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        list.clear();
        String word = inputText.getText();

        ArrayList<String> result = null;
        try {
            result = data.getSuggestWord(word);
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        for(int i = 0; i < result.size();i++){
            list.addElement(result.get(i));
        }

        suggestWord.setModel(list);
    }
    private void inputTextKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        list.clear();
        String text = inputText.getText();
        try {
            ArrayList<String> result = data.getSuggestWord(text);
            for(int i = 0; i < result.size();i++){
                list.addElement(result.get(i));
            }

            suggestWord.setModel(list);
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }



    }
    private void addWordActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        new addForm().setVisible(true);
    }

    private void deleteWordActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        new deleteForm().setVisible(true);
    }

    private void editWordActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        new editForm().setVisible(true);
    }

    private void historyMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            showLookup.setContentType("text/html");
            String style = "h1{font: outline;font-size: 25px; font-weight: bold;font-family: Arial, Helvetica, sans-serif;color: red;} h2{color: blue;font-family: Arial, Helvetica, sans-serif;} l1{color: wheat;font-family: Arial, Helvetica, sans-serif;font-style: italic;}";
            String text  = history.getSelectedItem().toString();
//            String text = list.elementAt(index);
            String result = data.getLookup(text);

            showLookup.setText("<html> <head> <style>" + style + "</style> </head> <body> " + result + "</body> </html>");

            showLookup.setCaretPosition(0);
//            history.addItem(text);
            showLookup.setEditable(false);

        } catch (SQLException ex) {
            Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void suggestWordMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            showLookup.setContentType("text/html");
            String style = "h1{font: outline;font-size: 25px; font-weight: bold;font-family: Arial, Helvetica, sans-serif;color: red;} h2{color: blue;font-family: Arial, Helvetica, sans-serif;} l1{color: wheat;font-family: Arial, Helvetica, sans-serif;font-style: italic;}";
            int index = suggestWord.getSelectedIndex();
            String text = list.elementAt(index);
            String result = data.getLookup(text);

            showLookup.setText("<html> <head> <style>" + style + "</style> </head> <body> " + result + "</body> </html>");
            showLookup.setCaretPosition(0);
            history.addItem(text);
            showLookup.setEditable(false);

        } catch (SQLException ex) {
            Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIv3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIv3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIv3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIv3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

//                new GUIv3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton addWord;
    private javax.swing.JPanel background;
    private javax.swing.JButton deleteWord;
    private javax.swing.JButton editWord;
    private javax.swing.JComboBox<String> history;
    private javax.swing.JTextField inputText;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JEditorPane showLookup;
    private javax.swing.JButton speak;
    private javax.swing.JList<String> suggestWord;
    private javax.swing.JPanel taskbar;
    // End of variables declaration      
}
